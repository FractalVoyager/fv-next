// Generated from Fractal.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,80,566,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,
1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,
19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,
1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,
27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,
1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,
31,1,31,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,
1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,
38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,
1,42,1,42,5,42,386,8,42,10,42,12,42,389,9,42,1,43,1,43,4,43,393,8,43,11,
43,12,43,394,1,43,4,43,398,8,43,11,43,12,43,399,1,43,1,43,4,43,404,8,43,
11,43,12,43,405,3,43,408,8,43,3,43,410,8,43,1,44,1,44,1,44,1,44,3,44,416,
8,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,
47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,
1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,
53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,
1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,
60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,
1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,
66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,73,
1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,4,75,541,8,75,11,75,12,75,542,1,
76,1,76,1,77,1,77,1,78,4,78,550,8,78,11,78,12,78,551,1,78,1,78,1,79,1,79,
1,79,1,79,5,79,560,8,79,10,79,12,79,563,9,79,1,79,1,79,0,0,80,1,1,3,2,5,
3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,
105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,
147,74,149,75,151,76,153,77,155,78,157,79,159,80,1,0,2,3,0,9,10,13,13,32,
32,2,0,10,10,13,13,575,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,
65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,
0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,
0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,
0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,
0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,1,
161,1,0,0,0,3,163,1,0,0,0,5,167,1,0,0,0,7,170,1,0,0,0,9,178,1,0,0,0,11,184,
1,0,0,0,13,186,1,0,0,0,15,190,1,0,0,0,17,194,1,0,0,0,19,198,1,0,0,0,21,205,
1,0,0,0,23,209,1,0,0,0,25,217,1,0,0,0,27,226,1,0,0,0,29,229,1,0,0,0,31,234,
1,0,0,0,33,239,1,0,0,0,35,242,1,0,0,0,37,248,1,0,0,0,39,251,1,0,0,0,41,258,
1,0,0,0,43,264,1,0,0,0,45,274,1,0,0,0,47,279,1,0,0,0,49,294,1,0,0,0,51,298,
1,0,0,0,53,304,1,0,0,0,55,309,1,0,0,0,57,315,1,0,0,0,59,324,1,0,0,0,61,331,
1,0,0,0,63,337,1,0,0,0,65,344,1,0,0,0,67,346,1,0,0,0,69,348,1,0,0,0,71,350,
1,0,0,0,73,353,1,0,0,0,75,358,1,0,0,0,77,366,1,0,0,0,79,372,1,0,0,0,81,374,
1,0,0,0,83,381,1,0,0,0,85,383,1,0,0,0,87,409,1,0,0,0,89,415,1,0,0,0,91,417,
1,0,0,0,93,423,1,0,0,0,95,429,1,0,0,0,97,437,1,0,0,0,99,441,1,0,0,0,101,
445,1,0,0,0,103,449,1,0,0,0,105,453,1,0,0,0,107,458,1,0,0,0,109,463,1,0,
0,0,111,468,1,0,0,0,113,471,1,0,0,0,115,474,1,0,0,0,117,478,1,0,0,0,119,
482,1,0,0,0,121,486,1,0,0,0,123,491,1,0,0,0,125,498,1,0,0,0,127,505,1,0,
0,0,129,512,1,0,0,0,131,514,1,0,0,0,133,516,1,0,0,0,135,518,1,0,0,0,137,
520,1,0,0,0,139,522,1,0,0,0,141,524,1,0,0,0,143,526,1,0,0,0,145,528,1,0,
0,0,147,531,1,0,0,0,149,535,1,0,0,0,151,540,1,0,0,0,153,544,1,0,0,0,155,
546,1,0,0,0,157,549,1,0,0,0,159,555,1,0,0,0,161,162,5,46,0,0,162,2,1,0,0,
0,163,164,5,115,0,0,164,165,5,101,0,0,165,166,5,116,0,0,166,4,1,0,0,0,167,
168,5,116,0,0,168,169,5,111,0,0,169,6,1,0,0,0,170,171,5,100,0,0,171,172,
5,101,0,0,172,173,5,102,0,0,173,174,5,97,0,0,174,175,5,117,0,0,175,176,5,
108,0,0,176,177,5,116,0,0,177,8,1,0,0,0,178,179,5,98,0,0,179,180,5,108,0,
0,180,181,5,111,0,0,181,182,5,99,0,0,182,183,5,107,0,0,183,10,1,0,0,0,184,
185,5,58,0,0,185,12,1,0,0,0,186,187,5,101,0,0,187,188,5,110,0,0,188,189,
5,100,0,0,189,14,1,0,0,0,190,191,5,112,0,0,191,192,5,97,0,0,192,193,5,114,
0,0,193,16,1,0,0,0,194,195,5,100,0,0,195,196,5,121,0,0,196,197,5,110,0,0,
197,18,1,0,0,0,198,199,5,114,0,0,199,200,5,101,0,0,200,201,5,100,0,0,201,
202,5,117,0,0,202,203,5,99,0,0,203,204,5,101,0,0,204,20,1,0,0,0,205,206,
5,109,0,0,206,207,5,111,0,0,207,208,5,100,0,0,208,22,1,0,0,0,209,210,5,101,
0,0,210,211,5,115,0,0,211,212,5,99,0,0,212,213,5,97,0,0,213,214,5,112,0,
0,214,215,5,101,0,0,215,216,5,115,0,0,216,24,1,0,0,0,217,218,5,118,0,0,218,
219,5,97,0,0,219,220,5,110,0,0,220,221,5,105,0,0,221,222,5,115,0,0,222,223,
5,104,0,0,223,224,5,101,0,0,224,225,5,115,0,0,225,26,1,0,0,0,226,227,5,105,
0,0,227,228,5,102,0,0,228,28,1,0,0,0,229,230,5,116,0,0,230,231,5,104,0,0,
231,232,5,101,0,0,232,233,5,110,0,0,233,30,1,0,0,0,234,235,5,101,0,0,235,
236,5,108,0,0,236,237,5,115,0,0,237,238,5,101,0,0,238,32,1,0,0,0,239,240,
5,100,0,0,240,241,5,111,0,0,241,34,1,0,0,0,242,243,5,117,0,0,243,244,5,110,
0,0,244,245,5,116,0,0,245,246,5,105,0,0,246,247,5,108,0,0,247,36,1,0,0,0,
248,249,5,111,0,0,249,250,5,110,0,0,250,38,1,0,0,0,251,252,5,114,0,0,252,
253,5,101,0,0,253,254,5,112,0,0,254,255,5,101,0,0,255,256,5,97,0,0,256,257,
5,116,0,0,257,40,1,0,0,0,258,259,5,116,0,0,259,260,5,105,0,0,260,261,5,109,
0,0,261,262,5,101,0,0,262,263,5,115,0,0,263,42,1,0,0,0,264,265,5,99,0,0,
265,266,5,104,0,0,266,267,5,101,0,0,267,268,5,99,0,0,268,269,5,107,0,0,269,
270,5,101,0,0,270,271,5,114,0,0,271,272,5,101,0,0,272,273,5,100,0,0,273,
44,1,0,0,0,274,275,5,100,0,0,275,276,5,105,0,0,276,277,5,115,0,0,277,278,
5,99,0,0,278,46,1,0,0,0,279,280,5,112,0,0,280,281,5,101,0,0,281,282,5,114,
0,0,282,283,5,105,0,0,283,284,5,111,0,0,284,285,5,100,0,0,285,286,5,32,0,
0,286,287,5,51,0,0,287,288,5,32,0,0,288,289,5,99,0,0,289,290,5,121,0,0,290,
291,5,99,0,0,291,292,5,108,0,0,292,293,5,101,0,0,293,48,1,0,0,0,294,295,
5,114,0,0,295,296,5,101,0,0,296,297,5,100,0,0,297,50,1,0,0,0,298,299,5,103,
0,0,299,300,5,114,0,0,300,301,5,101,0,0,301,302,5,101,0,0,302,303,5,110,
0,0,303,52,1,0,0,0,304,305,5,98,0,0,305,306,5,108,0,0,306,307,5,117,0,0,
307,308,5,101,0,0,308,54,1,0,0,0,309,310,5,111,0,0,310,311,5,109,0,0,311,
312,5,101,0,0,312,313,5,103,0,0,313,314,5,97,0,0,314,56,1,0,0,0,315,316,
5,111,0,0,316,317,5,109,0,0,317,318,5,101,0,0,318,319,5,103,0,0,319,320,
5,97,0,0,320,321,5,98,0,0,321,322,5,97,0,0,322,323,5,114,0,0,323,58,1,0,
0,0,324,325,5,80,0,0,325,326,5,117,0,0,326,327,5,114,0,0,327,328,5,112,0,
0,328,329,5,108,0,0,329,330,5,101,0,0,330,60,1,0,0,0,331,332,5,87,0,0,332,
333,5,104,0,0,333,334,5,105,0,0,334,335,5,116,0,0,335,336,5,101,0,0,336,
62,1,0,0,0,337,338,5,79,0,0,338,339,5,114,0,0,339,340,5,97,0,0,340,341,5,
110,0,0,341,342,5,103,0,0,342,343,5,101,0,0,343,64,1,0,0,0,344,345,5,91,
0,0,345,66,1,0,0,0,346,347,5,124,0,0,347,68,1,0,0,0,348,349,5,93,0,0,349,
70,1,0,0,0,350,351,5,105,0,0,351,352,5,115,0,0,352,72,1,0,0,0,353,354,5,
114,0,0,354,355,5,101,0,0,355,356,5,97,0,0,356,357,5,108,0,0,357,74,1,0,
0,0,358,359,5,105,0,0,359,360,5,110,0,0,360,361,5,116,0,0,361,362,5,101,
0,0,362,363,5,103,0,0,363,364,5,101,0,0,364,365,5,114,0,0,365,76,1,0,0,0,
366,367,5,112,0,0,367,368,5,114,0,0,368,369,5,111,0,0,369,370,5,98,0,0,370,
371,5,101,0,0,371,78,1,0,0,0,372,373,5,34,0,0,373,80,1,0,0,0,374,375,5,114,
0,0,375,376,5,101,0,0,376,377,5,112,0,0,377,378,5,111,0,0,378,379,5,114,
0,0,379,380,5,116,0,0,380,82,1,0,0,0,381,382,5,8710,0,0,382,84,1,0,0,0,383,
387,2,49,57,0,384,386,2,48,57,0,385,384,1,0,0,0,386,389,1,0,0,0,387,385,
1,0,0,0,387,388,1,0,0,0,388,86,1,0,0,0,389,387,1,0,0,0,390,392,5,46,0,0,
391,393,2,48,57,0,392,391,1,0,0,0,393,394,1,0,0,0,394,392,1,0,0,0,394,395,
1,0,0,0,395,410,1,0,0,0,396,398,2,48,57,0,397,396,1,0,0,0,398,399,1,0,0,
0,399,397,1,0,0,0,399,400,1,0,0,0,400,407,1,0,0,0,401,403,5,46,0,0,402,404,
2,48,57,0,403,402,1,0,0,0,404,405,1,0,0,0,405,403,1,0,0,0,405,406,1,0,0,
0,406,408,1,0,0,0,407,401,1,0,0,0,407,408,1,0,0,0,408,410,1,0,0,0,409,390,
1,0,0,0,409,397,1,0,0,0,410,88,1,0,0,0,411,412,3,87,43,0,412,413,5,105,0,
0,413,416,1,0,0,0,414,416,5,105,0,0,415,411,1,0,0,0,415,414,1,0,0,0,416,
90,1,0,0,0,417,418,5,115,0,0,418,419,5,116,0,0,419,420,5,111,0,0,420,421,
5,112,0,0,421,422,5,115,0,0,422,92,1,0,0,0,423,424,5,112,0,0,424,425,5,105,
0,0,425,426,5,120,0,0,426,427,5,101,0,0,427,428,5,108,0,0,428,94,1,0,0,0,
429,430,5,105,0,0,430,431,5,116,0,0,431,432,5,101,0,0,432,433,5,114,0,0,
433,434,5,97,0,0,434,435,5,116,0,0,435,436,5,101,0,0,436,96,1,0,0,0,437,
438,5,101,0,0,438,439,5,120,0,0,439,440,5,112,0,0,440,98,1,0,0,0,441,442,
5,99,0,0,442,443,5,111,0,0,443,444,5,115,0,0,444,100,1,0,0,0,445,446,5,115,
0,0,446,447,5,105,0,0,447,448,5,110,0,0,448,102,1,0,0,0,449,450,5,116,0,
0,450,451,5,97,0,0,451,452,5,110,0,0,452,104,1,0,0,0,453,454,5,99,0,0,454,
455,5,111,0,0,455,456,5,115,0,0,456,457,5,104,0,0,457,106,1,0,0,0,458,459,
5,115,0,0,459,460,5,105,0,0,460,461,5,110,0,0,461,462,5,104,0,0,462,108,
1,0,0,0,463,464,5,116,0,0,464,465,5,97,0,0,465,466,5,110,0,0,466,467,5,104,
0,0,467,110,1,0,0,0,468,469,5,114,0,0,469,470,5,101,0,0,470,112,1,0,0,0,
471,472,5,105,0,0,472,473,5,109,0,0,473,114,1,0,0,0,474,475,5,98,0,0,475,
476,5,97,0,0,476,477,5,114,0,0,477,116,1,0,0,0,478,479,5,97,0,0,479,480,
5,114,0,0,480,481,5,103,0,0,481,118,1,0,0,0,482,483,5,108,0,0,483,484,5,
111,0,0,484,485,5,103,0,0,485,120,1,0,0,0,486,487,5,115,0,0,487,488,5,113,
0,0,488,489,5,114,0,0,489,490,5,116,0,0,490,122,1,0,0,0,491,492,5,97,0,0,
492,493,5,114,0,0,493,494,5,99,0,0,494,495,5,99,0,0,495,496,5,111,0,0,496,
497,5,115,0,0,497,124,1,0,0,0,498,499,5,97,0,0,499,500,5,114,0,0,500,501,
5,99,0,0,501,502,5,115,0,0,502,503,5,105,0,0,503,504,5,110,0,0,504,126,1,
0,0,0,505,506,5,97,0,0,506,507,5,114,0,0,507,508,5,99,0,0,508,509,5,116,
0,0,509,510,5,97,0,0,510,511,5,110,0,0,511,128,1,0,0,0,512,513,5,94,0,0,
513,130,1,0,0,0,514,515,5,43,0,0,515,132,1,0,0,0,516,517,5,45,0,0,517,134,
1,0,0,0,518,519,5,42,0,0,519,136,1,0,0,0,520,521,5,47,0,0,521,138,1,0,0,
0,522,523,5,61,0,0,523,140,1,0,0,0,524,525,5,62,0,0,525,142,1,0,0,0,526,
527,5,60,0,0,527,144,1,0,0,0,528,529,5,111,0,0,529,530,5,114,0,0,530,146,
1,0,0,0,531,532,5,97,0,0,532,533,5,110,0,0,533,534,5,100,0,0,534,148,1,0,
0,0,535,536,5,120,0,0,536,537,5,111,0,0,537,538,5,114,0,0,538,150,1,0,0,
0,539,541,2,97,122,0,540,539,1,0,0,0,541,542,1,0,0,0,542,540,1,0,0,0,542,
543,1,0,0,0,543,152,1,0,0,0,544,545,5,40,0,0,545,154,1,0,0,0,546,547,5,41,
0,0,547,156,1,0,0,0,548,550,7,0,0,0,549,548,1,0,0,0,550,551,1,0,0,0,551,
549,1,0,0,0,551,552,1,0,0,0,552,553,1,0,0,0,553,554,6,78,0,0,554,158,1,0,
0,0,555,556,5,47,0,0,556,557,5,47,0,0,557,561,1,0,0,0,558,560,8,1,0,0,559,
558,1,0,0,0,560,563,1,0,0,0,561,559,1,0,0,0,561,562,1,0,0,0,562,564,1,0,
0,0,563,561,1,0,0,0,564,565,6,79,0,0,565,160,1,0,0,0,11,0,387,394,399,405,
407,409,415,542,551,561,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class FractalLexer extends antlr4.Lexer {

    static grammarFileName = "Fractal.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'.'", "'set'", "'to'", "'default'", "'block'", 
                         "':'", "'end'", "'par'", "'dyn'", "'reduce'", "'mod'", 
                         "'escapes'", "'vanishes'", "'if'", "'then'", "'else'", 
                         "'do'", "'until'", "'on'", "'repeat'", "'times'", 
                         "'checkered'", "'disc'", "'period 3 cycle'", "'red'", 
                         "'green'", "'blue'", "'omega'", "'omegabar'", "'Purple'", 
                         "'White'", "'Orange'", "'['", "'|'", "']'", "'is'", 
                         "'real'", "'integer'", "'probe'", "'\"'", "'report'", 
                         "'\\u2206'", null, null, null, "'stops'", "'pixel'", 
                         "'iterate'", "'exp'", "'cos'", "'sin'", "'tan'", 
                         "'cosh'", "'sinh'", "'tanh'", "'re'", "'im'", "'bar'", 
                         "'arg'", "'log'", "'sqrt'", "'arccos'", "'arcsin'", 
                         "'arctan'", "'^'", "'+'", "'-'", "'*'", "'/'", 
                         "'='", "'>'", "'<'", "'or'", "'and'", "'xor'", 
                         null, "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, "POS_INT", "NUMBER", "CPX_NUMBER_IM", 
                          "STOPS", "PIXEL", "ITERATE", "EXP", "COS", "SIN", 
                          "TAN", "COSH", "SINH", "TANH", "RE", "IM", "BAR", 
                          "ARG", "LOG", "SQRT", "ARCCOS", "ARCSIN", "ARCTAN", 
                          "POW", "PLUS", "MINUS", "TIMES", "DIVIDE", "EQUALS", 
                          "GT", "LT", "OR", "AND", "XOR", "VARIABLE", "LPAREN", 
                          "RPAREN", "WS", "COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "POS_INT", 
                      "NUMBER", "CPX_NUMBER_IM", "STOPS", "PIXEL", "ITERATE", 
                      "EXP", "COS", "SIN", "TAN", "COSH", "SINH", "TANH", 
                      "RE", "IM", "BAR", "ARG", "LOG", "SQRT", "ARCCOS", 
                      "ARCSIN", "ARCTAN", "POW", "PLUS", "MINUS", "TIMES", 
                      "DIVIDE", "EQUALS", "GT", "LT", "OR", "AND", "XOR", 
                      "VARIABLE", "LPAREN", "RPAREN", "WS", "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

FractalLexer.EOF = antlr4.Token.EOF;
FractalLexer.T__0 = 1;
FractalLexer.T__1 = 2;
FractalLexer.T__2 = 3;
FractalLexer.T__3 = 4;
FractalLexer.T__4 = 5;
FractalLexer.T__5 = 6;
FractalLexer.T__6 = 7;
FractalLexer.T__7 = 8;
FractalLexer.T__8 = 9;
FractalLexer.T__9 = 10;
FractalLexer.T__10 = 11;
FractalLexer.T__11 = 12;
FractalLexer.T__12 = 13;
FractalLexer.T__13 = 14;
FractalLexer.T__14 = 15;
FractalLexer.T__15 = 16;
FractalLexer.T__16 = 17;
FractalLexer.T__17 = 18;
FractalLexer.T__18 = 19;
FractalLexer.T__19 = 20;
FractalLexer.T__20 = 21;
FractalLexer.T__21 = 22;
FractalLexer.T__22 = 23;
FractalLexer.T__23 = 24;
FractalLexer.T__24 = 25;
FractalLexer.T__25 = 26;
FractalLexer.T__26 = 27;
FractalLexer.T__27 = 28;
FractalLexer.T__28 = 29;
FractalLexer.T__29 = 30;
FractalLexer.T__30 = 31;
FractalLexer.T__31 = 32;
FractalLexer.T__32 = 33;
FractalLexer.T__33 = 34;
FractalLexer.T__34 = 35;
FractalLexer.T__35 = 36;
FractalLexer.T__36 = 37;
FractalLexer.T__37 = 38;
FractalLexer.T__38 = 39;
FractalLexer.T__39 = 40;
FractalLexer.T__40 = 41;
FractalLexer.T__41 = 42;
FractalLexer.POS_INT = 43;
FractalLexer.NUMBER = 44;
FractalLexer.CPX_NUMBER_IM = 45;
FractalLexer.STOPS = 46;
FractalLexer.PIXEL = 47;
FractalLexer.ITERATE = 48;
FractalLexer.EXP = 49;
FractalLexer.COS = 50;
FractalLexer.SIN = 51;
FractalLexer.TAN = 52;
FractalLexer.COSH = 53;
FractalLexer.SINH = 54;
FractalLexer.TANH = 55;
FractalLexer.RE = 56;
FractalLexer.IM = 57;
FractalLexer.BAR = 58;
FractalLexer.ARG = 59;
FractalLexer.LOG = 60;
FractalLexer.SQRT = 61;
FractalLexer.ARCCOS = 62;
FractalLexer.ARCSIN = 63;
FractalLexer.ARCTAN = 64;
FractalLexer.POW = 65;
FractalLexer.PLUS = 66;
FractalLexer.MINUS = 67;
FractalLexer.TIMES = 68;
FractalLexer.DIVIDE = 69;
FractalLexer.EQUALS = 70;
FractalLexer.GT = 71;
FractalLexer.LT = 72;
FractalLexer.OR = 73;
FractalLexer.AND = 74;
FractalLexer.XOR = 75;
FractalLexer.VARIABLE = 76;
FractalLexer.LPAREN = 77;
FractalLexer.RPAREN = 78;
FractalLexer.WS = 79;
FractalLexer.COMMENT = 80;



